
### css관련 Q&A 모음

#### Q. css-in-js가 무엇인가?

css파일이 아닌 자바스크립트 파일 내부에서 css 규칙을 정의하는 코딩 스타일을 `css-in-js`라고 부른다.\
\
스타일드 컴포넌트같은 라이브러리가 대표적인 css-in-js의 예이다

#### Q. 테일윈드 css (tailwind css)란 무엇인가?

테일윈드를 이야기하기 앞서 부트스트랩 라이브러리를 이야기 해보자\
\
부트스트랩은 일일이 css 규칙을 정의하지 않아도 html 엘리먼트에 클래스 이름을 기입하는 것만으로 간편하게 사용할 수 있는 라이브러리이다. 이것이 가능한 이유는 부트스트랩 팀에서 미리 css 코드와 클래스 이름을 정의해놓았기 때문이다\
\
즉 부트스트랩을 사용하면 남이 만들어놓은 css를 그저 가져다 쓰면 될 뿐이므로 내가 css 규칙을 작성할 일이 거의 없다.\
\
부트스트랩에서 제공하는 클래스 이름만 암기하고 그 암기한 클래스 이름을 원하는 엘리먼트에 붙여넣으면 될 뿐이다\
\
그리고 이 부트스트랩의 후계자 정도 되는 라이브러리가 테일윈드 css라고 할 수 있다. 테일윈드 css도 부트스트랩과 마찬가지로 이미 정의되어 있는 css규칙을 사용한다. 유저는 그저 테일윈드에 정의되어 있는 클래스 이름을 암기하고 그 이름을 가져다가 특정 html 엘리먼트에 적용하기만 하면 되는 것이다.\
\
앞서 이야기했듯 내가 css규칙을 일일이 작성할 필요가 거의 없다는 점이 테일윈드 css의 가장 큰 장점이다. 극단적으로 말하면 프로젝트의 모든 스타일링을 테일윈드 만으로도 구현할 수 있다. 따라서 내가 작성해야 하는 css코드의 양을 제로로 줄일 수도 있다 \
\
하지만 단점으로는 클래스이름을 많이 적용하게 되면 코드가 너무 지저분해 지고 내가 어떤 속성을 적용했는지 한눈에 알아보기 어렵다는 단점이 있다. 이 단점은 극복이 거의 불가능하다. 이 치명적인 단점 때문에 테일윈드를 싫어하는 사람들이 많다\
\
그리고 암기해야 하는 클래스 이름이 많아 어느정도의 러닝커브가 있다. 테일윈드에 익숙해지기 전까지는 모니터 한켠에 테일윈드의 공식 docs 페이지를 띄어놓고 작업해야 한다

#### Q. 스타일드 컴포넌트(styled-components)란 무엇인가?

스타일드 컴포넌트는 css-in-js 패턴의 일종이다\
\
말 그대로 스타일이 적용된 컴포넌트를 생성한다\
\
함수 컴포넌트 내부에서 스타일 객체의 메소드를 호출하여 새로운 스타일이 적용된 컴포넌트를 반환한다\
\
아래 예는 스타일 객체에서 a메소드를 호출하여 새로운 스타일이 적용된 앵커 태그를 생성한다

```javascript
const AnchorTag = styled.a`
    color : red
` ;
```

이렇게 리턴된 컴포넌트는 일반적인 리액트 컴포넌트처럼 사용할 수 있다\
\
스타일드 컴포넌트가 주목받는 이유는 두가지 정도가 있다\
\
첫째로 함수 컴포넌트의 리턴부분이 깔끔해진다. html엘리먼트에 어떠한 클래스네임도 기입할 필요가 없기 때문이다\
\
두번째로 함수 컴포넌트의 완전한 고립화가 가능해진다. 외부의 css파일에서 css속성을 임포트하지 않아도 되므로 단일 파일 형태로 관리하기 쉽다. 이에 따라 자연스럽게 재사용성도 높아진다\
\
세번째로 레가시 코드를 새로운 css 프레임워크로 대체할 때 코드를 리팩토링할 필요가 없다. 앞서 말했듯 스타일드 컴포넌트가 적용된 리액트 컴포넌트는 완전한 고립화가 가능하므로 다른 컴포넌트에서 테일윈드 css등의 별개의 프레임워크를 사용한다 하더라도 충돌을 일으키지 않은 채 정상적으로 작동한다\
\
하지만 스타일드 컴포넌트는 css 정의와 리액트 컴포넌트 정의부분이 분리되지 않으므로 다른 컴포넌트에서 css 정의를 재사용하기 어렵다는 단점이 있다

#### Q. 함수 컴포넌트 내부에서 사용하는 `<style jsx>{" "}` 같은 패턴을 뭐라고 부르는가 ?

이것은 `스타일드 jsx(styled-jsx)` 라고 부른다. 버셀(vercel)에서 개발한 스타일드 jsx 라이브러리는 함수 컴포넌트 내부에서 사용하는 `css-in-js` 패턴의 일종이다.\
\
스타일드 jsx에서 선언된 css 규칙은 해당 컴포넌트에만 국소적으로 적용된다.\
\
이는 스타일드 컴포넌트 라이브러와 유사하지만 둘 사이의 차이점이 있다.\
\
스타일드 jsx는 css규칙을 선언한 후에 html엘리먼트에도 클래스이름을 기입해야 하는 번거로움이 있다.\
\
하지만 스타일드 컴포넌트로 정의된 리액트 컴포넌트에는 별도의 클래스네임을 기입할 필요가 없다는 편의성이 있다.\
\
이런 면에서 보면 스타일드 jsx의 진화된 버전이 스타일드 컴포넌트라고 해석할 수도 있지만 꼭 스타일드 컴포넌트가 더 좋다고 볼 수는 없다\
\
왜냐하면 스타일드 컴포넌트는 코드부와 css정의부가 독립되기 않기 때문이다.\
\
코드부와 css정의부가 독립되는게 왜 중요한가?\
\
이들 둘이 분리되어 있는 경우에는 관심사의 분리가 이루어진 것이며 관심사가 분리된 경우에는 코드의 유지보수가 더 수월해진다\
\
css 디피니티브 가이드(css definitive guide)의 공저자인 에스텔 웨일(Estelle Weyl)은 css와 js코드가 분리되어야 한다고 주장했는데 그렇게 해야하는 이유는 레이어를 분리하기 위함이다.\
\
애초에 웹을 구성하는 도구가 html, css, javascript의 3가지로 나뉜것도 레이어를 분리해서 유지보수를 수월하게 하기 위함이었다고 그녀는 말한다.\
\
구체적으로 이야기하면 css는 표현 계층(presentational layer)의 구현체이며 자바스크립트는 행동 계층(Behavioral layer)의 구현체이다.\
\
이들 둘이 분리된건 우연이 아니며 의도적인 것이었다.\
\
그런데 오늘날 `css-in-js`를 통하여 표현 계층과 행동 계층을 합병하려 하고 있으니 이것은 썩 바라짐하지 못하다고 그녀는 이야기하고 있는 것이었다.\
\
그러므로 우리는 외부에서 css를 항상 임포트해서 써야 하는가? 리액트의 관점에서 보면 그것도 썩 바람직하다고는 볼 수 없는 것이다.\
\
왜냐하면 그것은 단일 파일이 하나의 컴포넌트로 완결성을 지니는 고립성(isolation)을 해치기 때문이다.\
\
그런 관점에서 볼 때 스타일드 jsx는 레이어의 분리와 컴포넌트의 고립성을 보장하면서 어느정도는 레이어를 분리시키는 이 두가지 원칙의 절충점이라고 볼 수 있다\
\
비록 스타일드 jsx가 js파일 내부에서 사용된다고는 할지라도 단일 jsx구문은 코드에 산발적으로 흩어져있지 않으며 한곳에 응집되어 있다\
\
따라서 이리저리 css코드를 찾으러 헤메일 필요가 없는 것이다.\
\
이런면에서 볼 때 어느정도는 레이어의 분리가 성립되었다고도 평가할 수 있는 것이다\
\
결론을 말하면 완전한 레이어의 분리를 유지하여 개발하고 싶다면 css 모듈이 적합하고 리액트 컴포넌트를 단일 파일로 고립시킨 상태에서 어느정도의 레이어의 분리를 원한다면 스타일드 jsx가 적합하다


#### Q. CSS Module이란 무엇인가 ?

css 모듈은 특정 컴포넌트에만 국소적으로 스타일을 적용하는 css 테크닉이다\
\
css 모듈은 일반적인 css 임포트 (import) 패턴과 거의 같은 패턴이므로 새롭게 배울 내용은 거의 없다\
\
다만 css 파일명은 `컴포넌트명.module.css`과 같은 포멧으로 작성한다\
\
그리고 css를 적용할 때는 임포트된 css 모듈에 프로퍼티로 정의된 클래스 이름을 사용한다\
\
클래스명이나 아이디 어트리뷰트를 css 식별자로 사용할 수 있지만 아이디 사용은 권장하지 않는다. 아이디는 유니크한 값이므로 적용할 수 있는 엘리먼트가 매우 제한적이기 때문이다\
\
같은 css모듈을 사용하더라도 임포트 할 때마다 고유한 클래스 이름이 생성되어 다른 컴포넌트에서 같은 css 모듈을 사용한다고 해도 클래스명이 겹칠 일은 없다\
\
이것이 특정 컴포넌트에만 국소적으로 스타일을 적용하게 해주는 핵심 원리다\

#### Q. `CSS 모듈`에 안티 패턴이 있는가?

A. 부모 컴포넌트에서 생성된 클래스네임을 자식 컴포넌트로 상속하지 않는 편이 좋다.\
\
CSS 모듈을 임포트하고 나서 해당 모듈에서 제공하는 클래스네임을 자식 컴포넌트에 프롭스로  전달하지 않는 편이 좋다.\
\
만일 css 모듈 파일에서 클래스 이름을 변경했을 때 단일 컴포넌트에서만 사용하는 경우 클래스 네임의 변경은 쉽다. 그저 IDE를 켜고 일괄적으로 이름바꾸기 기능을 사용하면 10초 내외로 끝나는 작업이다.\
\
하지만 불특정 다수의 자식 컴포넌트에서 해당 클래스 이름을 가져다가 사용하는 경우는 자식 컴포넌트가 정의된 모든 파일을 순회하며 클래스 이름을 변경해줘야 하는 번거로움이 발생한다

#### Q. SASS(Syntactically Awesome Stylesheets) 란 무엇인가 ?

사스는 css의 변종 언어이며 이 언어는 빌드 과정에서 css로 트랜스파일 된다\
\
사스는 css 표준 문법보다 더욱 프로그래밍 언어스럽게 개발할 수 있다는 장점이 있다. 즉 사스는 변수, 믹스인, 중첩과 같은 기능을 제공한다. 이러한 기능들은 개발의 편의성을 제공한다\
\
요즘은 css 표준에도 변수같은 기능이 추가되어 사스를 사용할 이유가 점차 줄어들고 있기는 하다

Q. tama gui가 뭔가?
A. Universal React design systems that optimize for native & web 
a next generation design system for react native / react native web with better performance and ergonomics
https://tamagui.dev/
사이트가 제대로 작동하지 않는걸로 봐서 거의 메인테인이 되지 않는 듯 보임

Q. ANT DESIGN이 뭔가?
A. MUI같은 거다.
https://studioplug.tistory.com/375

Q. react-bootstrap이 뭔가?
A. MUI같은 거다. 인라인으로 클래스네임을 기입하지 않는다